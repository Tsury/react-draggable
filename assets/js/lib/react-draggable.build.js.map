{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-draggable.build.js","webpack:///webpack/bootstrap 3f7faca72ed8150353d0","webpack:///./assets/js/src/main.js","webpack:///./assets/js/src/components/Draggable.jsx","webpack:///external \"react\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Draggable","_Draggable2","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","Draggable","_React$Component","_this","getPrototypeOf","displayName","doDrag","state","pos","initialPosition","x","y","dragging","enabled","elementStyle","position","cssPosition","checkTimerStarted","scrollLocked","dragLocked","dragStartInputPos","dragStartElementPos","renderChild","bind","enable","disable","setStyle","setPosition","getPosition","positionContent","onDragStart","onDrag","onDragStop","onDragLeave","document","addEventListener","removeEventListener","additionalClass","className","children","createElement","onTouchStart","onTouchLeave","onMouseDown","_this2","inst","Children","map","child","newStyle","childStyle","style","assign","cloneElement","ref","setState","pageX","pageY","difX","difY","touchScrollLock","lock","newPos","bounds","x1","y1","x2","y2","y3","_this3","xPos","yPos","positionTransformString","transformStyle","msTransform","WebkitTransform","MozTransform","transform","e","mouseDownOnElement","clientX","clientY","type","changedTouches","mouseDownWhileDisabled","dragStartCallback","preventDefaultEvents","stopPropagation","preventDefault","_this4","setScrollLock","getNewPosition","dragCallback","event","dragStopCallback","dragLeaveCallback","Component","propTypes","PropTypes","string","shape","number","isRequired","oneOfType","array","object","func","bool"],"mappings":"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","file":"react-draggable.build.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ResponsiveImage\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ResponsiveImage\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ResponsiveImage\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ResponsiveImage\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!*******************************!*\\\n  !*** ./assets/js/src/main.js ***!\n  \\*******************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Draggable = __webpack_require__(/*! ./components/Draggable.jsx */ 1);\n\t\n\tvar _Draggable2 = _interopRequireDefault(_Draggable);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _Draggable2.default;\n\n/***/ },\n/* 1 */\n/*!************************************************!*\\\n  !*** ./assets/js/src/components/Draggable.jsx ***!\n  \\************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(/*! react */ 2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Draggable = function (_React$Component) {\n\t  _inherits(Draggable, _React$Component);\n\t\n\t  function Draggable(props) {\n\t    _classCallCheck(this, Draggable);\n\t\n\t    // used by React as the component name\n\t    var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\t\n\t    _this.displayName = 'Draggable';\n\t\n\t    // if the component drag should take place\n\t    _this.doDrag = true;\n\t\n\t    // initial state object\n\t    _this.state = {\n\t      pos: _this.props.initialPosition || { x: 0, y: 0 },\n\t      dragging: false,\n\t      enabled: true,\n\t      elementStyle: {\n\t        position: _this.props.cssPosition || 'absolute'\n\t      },\n\t      checkTimerStarted: false,\n\t      scrollLocked: false,\n\t      dragLocked: false,\n\t      dragStartInputPos: {\n\t        x: 0,\n\t        y: 0\n\t      },\n\t      dragStartElementPos: {\n\t        x: 0,\n\t        y: 0\n\t      }\n\t    };\n\t\n\t    // bind functions to component\n\t    _this.renderChild = _this.renderChild.bind(_this);\n\t    _this.enable = _this.enable.bind(_this);\n\t    _this.disable = _this.disable.bind(_this);\n\t    _this.setStyle = _this.setStyle.bind(_this);\n\t    _this.setPosition = _this.setPosition.bind(_this);\n\t    _this.getPosition = _this.getPosition.bind(_this);\n\t    _this.positionContent = _this.positionContent.bind(_this);\n\t    _this.onDragStart = _this.onDragStart.bind(_this);\n\t    _this.onDrag = _this.onDrag.bind(_this);\n\t    _this.onDragStop = _this.onDragStop.bind(_this);\n\t    _this.onDragLeave = _this.onDragLeave.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Called before component mounts to DOM\n\t   * @returns {undefined} undefined\n\t   */\n\t\n\t\n\t  _createClass(Draggable, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      if (this.props.initialPosition) {\n\t        this.positionContent();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Called after component mounts to DOM\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      document.addEventListener('mousemove', this.onDrag);\n\t      document.addEventListener('touchmove', this.onDrag);\n\t      document.addEventListener('mouseup', this.onDragStop);\n\t      document.addEventListener('touchend', this.onDragStop);\n\t    }\n\t\n\t    /**\n\t     * Called before component is removed from the DOM\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      document.removeEventListener('mousemove', this.onDrag);\n\t      document.removeEventListener('touchmove', this.onDrag);\n\t      document.removeEventListener('mouseup', this.onDragStop);\n\t      document.removeEventListener('touchend', this.onDragStop);\n\t    }\n\t\n\t    /**\n\t     * Renders component\n\t     * @returns {Object} React element\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var additionalClass = this.props.additionalClass || '';\n\t      var className = 'component-draggable ' + additionalClass;\n\t      var children = this.renderChild();\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: className,\n\t          onTouchStart: this.onDragStart,\n\t          onTouchLeave: this.onDragLeave,\n\t          onMouseDown: this.onDragStart,\n\t          onDragLeave: this.onDragLeave\n\t        },\n\t        children\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Renders the child element\n\t     * @returns {Object} React element\n\t     */\n\t\n\t  }, {\n\t    key: 'renderChild',\n\t    value: function renderChild() {\n\t      var _this2 = this;\n\t\n\t      var inst = this;\n\t\n\t      return _react2.default.Children.map(this.props.children, function (child) {\n\t        var newStyle = {};\n\t        var childStyle = {};\n\t        var elementStyle = {};\n\t\n\t        if (child.props && child.props.style) {\n\t          childStyle = child.props.style;\n\t        }\n\t\n\t        if (inst.state && inst.state.elementStyle) {\n\t          elementStyle = inst.state.elementStyle;\n\t        }\n\t\n\t        newStyle = Object.assign(childStyle, elementStyle);\n\t\n\t        return _react2.default.cloneElement(child, {\n\t          dragging: _this2.state.dragging,\n\t          style: newStyle,\n\t          ref: 'draggableChild'\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Enables othe element's draggability\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'enable',\n\t    value: function enable() {\n\t      this.setState({\n\t        enabled: true\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Disables the element's draggability\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'disable',\n\t    value: function disable() {\n\t      this.setState({\n\t        enabled: false\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Sets the element's style\n\t     * @param {Object} style An object key/value style attributes\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      var newStyle = Object.assign(this.state.elementStyle, style);\n\t\n\t      this.setState({\n\t        elementStyle: newStyle\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Positions the draggable element\n\t     * @param {Object} pos - An object with x and y position values\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition(pos) {\n\t      this.setState({\n\t        pos: pos\n\t      }, this.positionContent);\n\t    }\n\t\n\t    /**\n\t     * Gets the draggable element position\n\t     * @returns {Object} pos - An object with x and y position values\n\t     */\n\t\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.state.pos;\n\t    }\n\t\n\t    /**\n\t     * If the 'touchScrollLock' prop is set to true, and dragging is locked\n\t     * to the 'x' or 'y' axis, and the user is dragging\n\t     * (or scrolling on mobile) on the opposite axis, stop any dragging.\n\t     * This is so the content doesn't move when a user is scrolling on a\n\t     * mobile device.\n\t     * @param {Number} pageX - The x position of mouse or touch event\n\t     * @param {Number} pageY - The y position of mouse or touch event\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'setScrollLock',\n\t    value: function setScrollLock(pageX, pageY) {\n\t      var difX = 0;\n\t      var difY = 0;\n\t\n\t      if (this.props.touchScrollLock && (this.props.lock === 'x' || this.props.lock === 'y')) {\n\t        difY = pageY - this.state.pos.y;\n\t        difX = pageX - this.state.pos.x;\n\t\n\t        if (difY < 0) {\n\t          difY *= -1;\n\t        }\n\t\n\t        if (difX < 0) {\n\t          difX *= -1;\n\t        }\n\t\n\t        if (this.props.lock === 'x') {\n\t          // if the content is locked to dragging horizontally\n\t          if (difX > difY) {\n\t            // if the user is intending to swipe horizontally\n\t            if (difX > 10 && !this.state.scrollLocked) {\n\t              this.doDrag = true;\n\t              this.setState({ dragLocked: true });\n\t            }\n\t          } else {\n\t            // if the user is intending to swipe vertically\n\t            if (!this.state.dragLocked) {\n\t              this.setState({ scrollLocked: true });\n\t            }\n\t          }\n\t        } else {\n\t          // if the content is locked to dragging vertically\n\t          if (difY > difX) {\n\t            // if the user is intending to swipe vertically\n\t            if (difY > 10 && !this.state.scrollLocked) {\n\t              this.doDrag = true;\n\t              this.setState({ dragLocked: true });\n\t            }\n\t          } else {\n\t            // if the user is intending to swipe horizontally\n\t            if (!this.state.dragLocked) {\n\t              this.setState({ scrollLocked: true });\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the updated position values\n\t     * @param {Number} pageX - The x position of mouse or touch event\n\t     * @param {Number} pageY - The y position of mouse or touch event\n\t     * @returns {Object} The x and y coordinates to move the content to\n\t     */\n\t\n\t  }, {\n\t    key: 'getNewPosition',\n\t    value: function getNewPosition(pageX, pageY) {\n\t      var newPos = {\n\t        x: this.state.dragStartElementPos.x + (pageX - this.state.dragStartInputPos.x),\n\t        y: this.state.dragStartElementPos.y + (pageY - this.state.dragStartInputPos.y)\n\t      };\n\t\n\t      if (this.props.bounds) {\n\t        // if the bounds were supplied, don't let the content move outside\n\t        // of them\n\t        var bounds = this.props.bounds;\n\t\n\t        if (newPos.x < bounds.x1) {\n\t          newPos.x = bounds.x1;\n\t        }\n\t\n\t        if (newPos.y < bounds.y1) {\n\t          newPos.y = bounds.y1;\n\t        }\n\t\n\t        if (newPos.x > bounds.x2) {\n\t          newPos.x = bounds.x2;\n\t        }\n\t\n\t        if (newPos.y > bounds.y2) {\n\t          newPos.y = bounds.y3;\n\t        }\n\t      }\n\t\n\t      if (this.props.lock === 'x') {\n\t        newPos.y = this.state.dragStartElementPos.y;\n\t      }\n\t\n\t      if (this.props.lock === 'y') {\n\t        newPos.x = this.state.dragStartElementPos.x;\n\t      }\n\t\n\t      return newPos;\n\t    }\n\t\n\t    /**\n\t     * Positions the draggable element\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'positionContent',\n\t    value: function positionContent() {\n\t      var _this3 = this;\n\t\n\t      var xPos = this.state.pos.x + 'px';\n\t      var yPos = this.state.pos.y + 'px';\n\t      var positionTransformString = 'translate3d(' + xPos + ',' + yPos + ', 0px)';\n\t      var transformStyle = {\n\t        msTransform: positionTransformString,\n\t        WebkitTransform: positionTransformString,\n\t        MozTransform: positionTransformString,\n\t        transform: positionTransformString\n\t      };\n\t      var newStyle = Object.assign(this.state.elementStyle, transformStyle);\n\t\n\t      this.setState({\n\t        elementStyle: newStyle\n\t      }, function () {\n\t        // allow the component to be dragged again because all values have been\n\t        // updated through the React lifecycle\n\t        _this3.doDrag = true;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Called when the user's mouse is pressed\n\t     * @param {Event} e A mousedown event\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'onDragStart',\n\t    value: function onDragStart(e) {\n\t      this.mouseDownOnElement = true;\n\t\n\t      if (this.state.enabled) {\n\t        var pageX = e.clientX;\n\t        var pageY = e.clientY;\n\t\n\t        if (e.type !== 'mousedown') {\n\t          pageX = e.changedTouches[0].clientX;\n\t          pageY = e.changedTouches[0].clientY;\n\t        }\n\t\n\t        this.mouseDownWhileDisabled = false;\n\t\n\t        this.setState({\n\t          scrollLocked: false,\n\t          checkTimerStarted: true,\n\t          dragStartInputPos: {\n\t            x: pageX,\n\t            y: pageY\n\t          },\n\t          dragStartElementPos: {\n\t            x: this.state.pos.x,\n\t            y: this.state.pos.y\n\t          }\n\t        });\n\t\n\t        if (this.props.dragStartCallback) {\n\t          this.props.dragStartCallback(this.state.pos, e.target);\n\t        }\n\t\n\t        if (this.props.preventDefaultEvents) {\n\t          e.stopPropagation();\n\t          e.preventDefault();\n\t        }\n\t      } else {\n\t        this.mouseDownWhileDisabled = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Called when the user's mouse is moved\n\t     * @param {Event} e A mousemove event\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'onDrag',\n\t    value: function onDrag(e) {\n\t      var _this4 = this;\n\t\n\t      if (this.mouseDownOnElement) {\n\t        var pageX = e.clientX;\n\t        var pageY = e.clientY;\n\t\n\t        if (e.type !== 'mousemove') {\n\t          pageX = e.changedTouches[0].clientX;\n\t          pageY = e.changedTouches[0].clientY;\n\t        }\n\t\n\t        this.setScrollLock(pageX, pageY);\n\t\n\t        if (this.doDrag && !this.state.scrollLocked) {\n\t          this.doDrag = false;\n\t\n\t          var newPos = this.getNewPosition(pageX, pageY);\n\t\n\t          this.setState({\n\t            dragging: true,\n\t            pos: newPos\n\t          }, function () {\n\t            _this4.positionContent();\n\t          });\n\t\n\t          if (this.props.dragCallback) {\n\t            this.props.dragCallback(newPos, event.target);\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.props.preventDefaultEvents) {\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Called when the user's mouse is released\n\t     * @param {Event} e A mouseup event\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'onDragStop',\n\t    value: function onDragStop(e) {\n\t      if (this.mouseDownOnElement && this.state.enabled && !this.mouseDownWhileDisabled) {\n\t        if (this.props.dragStopCallback && !this.state.scrollLocked) {\n\t          this.props.dragStopCallback({\n\t            x: this.state.pos.x,\n\t            y: this.state.pos.y\n\t          }, e.target);\n\t        }\n\t\n\t        this.setState({\n\t          dragging: false,\n\t          scrollLocked: false,\n\t          dragLocked: false\n\t        });\n\t\n\t        if (this.props.preventDefaultEvents) {\n\t          e.stopPropagation();\n\t          e.preventDefault();\n\t        }\n\t      }\n\t\n\t      this.mouseDownOnElement = false;\n\t    }\n\t\n\t    /**\n\t     * Called when the user is dragging but releases the mouse\n\t     * outside of the draggable component\n\t     * @returns {undefined} undefined\n\t     */\n\t\n\t  }, {\n\t    key: 'onDragLeave',\n\t    value: function onDragLeave() {\n\t      if (this.state.dragging) {\n\t        this.setState({\n\t          scrollLocked: false,\n\t          dragLocked: false\n\t        });\n\t\n\t        if (this.props.dragLeaveCallback) {\n\t          this.props.dragLeaveCallback();\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Draggable;\n\t}(_react2.default.Component);\n\t\n\t/**\n\t * Expected propTypes\n\t * @prop {String} additionalClass - A string of additional classnames to add\n\t * to the element\n\t * @prop {Object} bounds - An array of coordinates, forming a square, that the\n\t * user cannot drag the component outside of\n\t * @prop {Object} children - Child React elements\n\t * @prop {String} cssPosition - The css positioning for for the element\n\t * (i.e. 'absolute' or 'fixed', defaults to 'absolute')\n\t * @prop {Function} dragCallback - A callback function while the user is\n\t * dragging\n\t * @prop {Function} dragStartCallback - A callback function for when the user\n\t * stops dragging\n\t * @prop {Function} dragStopCallback - A callback function for when the user\n\t * stops dragging\n\t * @prop {Function} dragLeaveCallback - A callback function for when the user\n\t * is dragging and the mouse/touch leaves the draggable component\n\t * @prop {Object} initialPosition - An object with initial x and y values for\n\t * the content\n\t * @prop {String} lock - An axis to lock element to when dragging, either\n\t * 'x' or 'y'\n\t * @prop {Boolean} preventDefaultEvents - Whether to prevent default\n\t * mouse/touch events\n\t * @prop {String} touchScrollLock - If set to true, prevents the content from\n\t * being dragged if the user is scrolling in the opposite direction on a touch\n\t * device\n\t */\n\t\n\t\n\tDraggable.propTypes = {\n\t  additionalClass: _react2.default.PropTypes.string,\n\t  bounds: _react2.default.PropTypes.shape({\n\t    x1: _react2.default.PropTypes.number.isRequired,\n\t    y1: _react2.default.PropTypes.number.isRequired,\n\t    x2: _react2.default.PropTypes.number.isRequired,\n\t    y2: _react2.default.PropTypes.number.isRequired\n\t  }),\n\t  children: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.array, _react2.default.PropTypes.object]).isRequired,\n\t  cssPosition: _react2.default.PropTypes.string,\n\t  dragCallback: _react2.default.PropTypes.func,\n\t  dragLeaveCallback: _react2.default.PropTypes.func,\n\t  dragStartCallback: _react2.default.PropTypes.func,\n\t  dragStopCallback: _react2.default.PropTypes.func,\n\t  initialPosition: _react2.default.PropTypes.object,\n\t  lock: _react2.default.PropTypes.string,\n\t  preventDefaultEvents: _react2.default.PropTypes.bool,\n\t  touchScrollLock: _react2.default.PropTypes.bool\n\t};\n\t\n\texports.default = Draggable;\n\n/***/ },\n/* 2 */\n/*!************************!*\\\n  !*** external \"react\" ***!\n  \\************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-draggable.build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3f7faca72ed8150353d0\n **/","import Draggable from './components/Draggable.jsx';\n\nexport default Draggable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./assets/js/src/main.js\n **/","import React from 'react';\n\nclass Draggable extends React.Component {\n  constructor(props) {\n    super(props);\n\n\n    // used by React as the component name\n    this.displayName = 'Draggable';\n\n\n    // if the component drag should take place\n    this.doDrag = true;\n\n\n    // initial state object\n    this.state = {\n      pos: this.props.initialPosition || { x: 0, y: 0 },\n      dragging: false,\n      enabled: true,\n      elementStyle: {\n        position: this.props.cssPosition || 'absolute',\n      },\n      checkTimerStarted: false,\n      scrollLocked: false,\n      dragLocked: false,\n      dragStartInputPos: {\n        x: 0,\n        y: 0,\n      },\n      dragStartElementPos: {\n        x: 0,\n        y: 0,\n      },\n    };\n\n\n    // bind functions to component\n    this.renderChild = this.renderChild.bind(this);\n    this.enable = this.enable.bind(this);\n    this.disable = this.disable.bind(this);\n    this.setStyle = this.setStyle.bind(this);\n    this.setPosition = this.setPosition.bind(this);\n    this.getPosition = this.getPosition.bind(this);\n    this.positionContent = this.positionContent.bind(this);\n    this.onDragStart = this.onDragStart.bind(this);\n    this.onDrag = this.onDrag.bind(this);\n    this.onDragStop = this.onDragStop.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n  }\n\n\n  /**\n   * Called before component mounts to DOM\n   * @returns {undefined} undefined\n   */\n  componentWillMount() {\n    if (this.props.initialPosition) {\n      this.positionContent();\n    }\n  }\n\n\n  /**\n   * Called after component mounts to DOM\n   * @returns {undefined} undefined\n   */\n  componentDidMount() {\n    document.addEventListener('mousemove', this.onDrag);\n    document.addEventListener('touchmove', this.onDrag);\n    document.addEventListener('mouseup', this.onDragStop);\n    document.addEventListener('touchend', this.onDragStop);\n  }\n\n\n  /**\n   * Called before component is removed from the DOM\n   * @returns {undefined} undefined\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onDrag);\n    document.removeEventListener('touchmove', this.onDrag);\n    document.removeEventListener('mouseup', this.onDragStop);\n    document.removeEventListener('touchend', this.onDragStop);\n  }\n\n\n  /**\n   * Renders component\n   * @returns {Object} React element\n   */\n  render() {\n    const additionalClass = this.props.additionalClass || '';\n    const className = 'component-draggable ' + additionalClass;\n    const children = this.renderChild();\n\n    return (\n      <div\n        className={className}\n        onTouchStart={this.onDragStart}\n        onTouchLeave={this.onDragLeave}\n        onMouseDown={this.onDragStart}\n        onDragLeave={this.onDragLeave}\n      >\n        {children}\n      </div>\n    );\n  }\n\n\n  /**\n   * Renders the child element\n   * @returns {Object} React element\n   */\n  renderChild() {\n    const inst = this;\n\n    return React.Children.map(this.props.children, (child) => {\n      let newStyle = {};\n      let childStyle = {};\n      let elementStyle = {};\n\n      if (child.props && child.props.style) {\n        childStyle = child.props.style;\n      }\n\n      if (inst.state && inst.state.elementStyle) {\n        elementStyle = inst.state.elementStyle;\n      }\n\n      newStyle = Object.assign(childStyle, elementStyle);\n\n      return React.cloneElement(child, {\n        dragging: this.state.dragging,\n        style: newStyle,\n        ref: 'draggableChild',\n      });\n    });\n  }\n\n\n  /**\n   * Enables othe element's draggability\n   * @returns {undefined} undefined\n   */\n  enable() {\n    this.setState({\n      enabled: true,\n    });\n  }\n\n\n  /**\n   * Disables the element's draggability\n   * @returns {undefined} undefined\n   */\n  disable() {\n    this.setState({\n      enabled: false,\n    });\n  }\n\n\n  /**\n   * Sets the element's style\n   * @param {Object} style An object key/value style attributes\n   * @returns {undefined} undefined\n   */\n  setStyle(style) {\n    const newStyle = Object.assign(this.state.elementStyle, style);\n\n    this.setState({\n      elementStyle: newStyle,\n    });\n  }\n\n\n  /**\n   * Positions the draggable element\n   * @param {Object} pos - An object with x and y position values\n   * @returns {undefined} undefined\n   */\n  setPosition(pos) {\n    this.setState({\n      pos,\n    }, this.positionContent);\n  }\n\n\n  /**\n   * Gets the draggable element position\n   * @returns {Object} pos - An object with x and y position values\n   */\n  getPosition() {\n    return this.state.pos;\n  }\n\n\n  /**\n   * If the 'touchScrollLock' prop is set to true, and dragging is locked\n   * to the 'x' or 'y' axis, and the user is dragging\n   * (or scrolling on mobile) on the opposite axis, stop any dragging.\n   * This is so the content doesn't move when a user is scrolling on a\n   * mobile device.\n   * @param {Number} pageX - The x position of mouse or touch event\n   * @param {Number} pageY - The y position of mouse or touch event\n   * @returns {undefined} undefined\n   */\n  setScrollLock(pageX, pageY) {\n    let difX = 0;\n    let difY = 0;\n\n    if (this.props.touchScrollLock && (this.props.lock === 'x' ||\n      this.props.lock === 'y')) {\n      difY = (pageY - this.state.pos.y);\n      difX = (pageX - this.state.pos.x);\n\n      if (difY < 0) {\n        difY *= -1;\n      }\n\n      if (difX < 0) {\n        difX *= -1;\n      }\n\n      if (this.props.lock === 'x') {\n        // if the content is locked to dragging horizontally\n        if (difX > difY) {\n          // if the user is intending to swipe horizontally\n          if (difX > 10 && !this.state.scrollLocked) {\n            this.doDrag = true;\n            this.setState({ dragLocked: true });\n          }\n        } else {\n          // if the user is intending to swipe vertically\n          if (!this.state.dragLocked) {\n            this.setState({ scrollLocked: true });\n          }\n        }\n      } else {\n        // if the content is locked to dragging vertically\n        if (difY > difX) {\n          // if the user is intending to swipe vertically\n          if (difY > 10 && !this.state.scrollLocked) {\n            this.doDrag = true;\n            this.setState({ dragLocked: true });\n          }\n        } else {\n          // if the user is intending to swipe horizontally\n          if (!this.state.dragLocked) {\n            this.setState({ scrollLocked: true });\n          }\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Gets the updated position values\n   * @param {Number} pageX - The x position of mouse or touch event\n   * @param {Number} pageY - The y position of mouse or touch event\n   * @returns {Object} The x and y coordinates to move the content to\n   */\n  getNewPosition(pageX, pageY) {\n    const newPos = {\n      x: this.state.dragStartElementPos.x +\n        (pageX - this.state.dragStartInputPos.x),\n      y: this.state.dragStartElementPos.y +\n        (pageY - this.state.dragStartInputPos.y),\n    };\n\n    if (this.props.bounds) {\n      // if the bounds were supplied, don't let the content move outside\n      // of them\n      const bounds = this.props.bounds;\n\n      if (newPos.x < bounds.x1) {\n        newPos.x = bounds.x1;\n      }\n\n      if (newPos.y < bounds.y1) {\n        newPos.y = bounds.y1;\n      }\n\n      if (newPos.x > bounds.x2) {\n        newPos.x = bounds.x2;\n      }\n\n      if (newPos.y > bounds.y2) {\n        newPos.y = bounds.y3;\n      }\n    }\n\n    if (this.props.lock === 'x') {\n      newPos.y = this.state.dragStartElementPos.y;\n    }\n\n    if (this.props.lock === 'y') {\n      newPos.x = this.state.dragStartElementPos.x;\n    }\n\n    return newPos;\n  }\n\n\n  /**\n   * Positions the draggable element\n   * @returns {undefined} undefined\n   */\n  positionContent() {\n    const xPos = this.state.pos.x + 'px';\n    const yPos = this.state.pos.y + 'px';\n    const positionTransformString = 'translate3d(' + xPos + ',' + yPos + ', 0px)';\n    const transformStyle = {\n      msTransform: positionTransformString,\n      WebkitTransform: positionTransformString,\n      MozTransform: positionTransformString,\n      transform: positionTransformString,\n    };\n    const newStyle = Object.assign(this.state.elementStyle, transformStyle);\n\n    this.setState({\n      elementStyle: newStyle,\n    }, () => {\n      // allow the component to be dragged again because all values have been\n      // updated through the React lifecycle\n      this.doDrag = true;\n    });\n  }\n\n\n  /**\n   * Called when the user's mouse is pressed\n   * @param {Event} e A mousedown event\n   * @returns {undefined} undefined\n   */\n  onDragStart(e) {\n    this.mouseDownOnElement = true;\n\n    if (this.state.enabled) {\n      let pageX = e.clientX;\n      let pageY = e.clientY;\n\n      if (e.type !== 'mousedown') {\n        pageX = e.changedTouches[0].clientX;\n        pageY = e.changedTouches[0].clientY;\n      }\n\n      this.mouseDownWhileDisabled = false;\n\n      this.setState({\n        scrollLocked: false,\n        checkTimerStarted: true,\n        dragStartInputPos: {\n          x: pageX,\n          y: pageY,\n        },\n        dragStartElementPos: {\n          x: this.state.pos.x,\n          y: this.state.pos.y,\n        },\n      });\n\n      if (this.props.dragStartCallback) {\n        this.props.dragStartCallback(this.state.pos, e.target);\n      }\n\n      if (this.props.preventDefaultEvents) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    } else {\n      this.mouseDownWhileDisabled = true;\n    }\n  }\n\n\n  /**\n   * Called when the user's mouse is moved\n   * @param {Event} e A mousemove event\n   * @returns {undefined} undefined\n   */\n  onDrag(e) {\n    if (this.mouseDownOnElement) {\n      let pageX = e.clientX;\n      let pageY = e.clientY;\n\n      if (e.type !== 'mousemove') {\n        pageX = e.changedTouches[0].clientX;\n        pageY = e.changedTouches[0].clientY;\n      }\n\n      this.setScrollLock(pageX, pageY);\n\n      if (this.doDrag && !this.state.scrollLocked) {\n        this.doDrag = false;\n\n        const newPos = this.getNewPosition(pageX, pageY);\n\n        this.setState({\n          dragging: true,\n          pos: newPos,\n        }, () => {\n          this.positionContent();\n        });\n\n        if (this.props.dragCallback) {\n          this.props.dragCallback(newPos, event.target);\n        }\n      }\n    }\n\n    if (this.props.preventDefaultEvents) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n\n  /**\n   * Called when the user's mouse is released\n   * @param {Event} e A mouseup event\n   * @returns {undefined} undefined\n   */\n  onDragStop(e) {\n    if (this.mouseDownOnElement &&\n      this.state.enabled &&\n      !this.mouseDownWhileDisabled) {\n      if (this.props.dragStopCallback && !this.state.scrollLocked) {\n        this.props.dragStopCallback({\n          x: this.state.pos.x,\n          y: this.state.pos.y,\n        }, e.target);\n      }\n\n      this.setState({\n        dragging: false,\n        scrollLocked: false,\n        dragLocked: false,\n      });\n\n      if (this.props.preventDefaultEvents) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n\n    this.mouseDownOnElement = false;\n  }\n\n\n  /**\n   * Called when the user is dragging but releases the mouse\n   * outside of the draggable component\n   * @returns {undefined} undefined\n   */\n  onDragLeave() {\n    if (this.state.dragging) {\n      this.setState({\n        scrollLocked: false,\n        dragLocked: false,\n      });\n\n      if (this.props.dragLeaveCallback) {\n        this.props.dragLeaveCallback();\n      }\n    }\n  }\n}\n\n\n/**\n * Expected propTypes\n * @prop {String} additionalClass - A string of additional classnames to add\n * to the element\n * @prop {Object} bounds - An array of coordinates, forming a square, that the\n * user cannot drag the component outside of\n * @prop {Object} children - Child React elements\n * @prop {String} cssPosition - The css positioning for for the element\n * (i.e. 'absolute' or 'fixed', defaults to 'absolute')\n * @prop {Function} dragCallback - A callback function while the user is\n * dragging\n * @prop {Function} dragStartCallback - A callback function for when the user\n * stops dragging\n * @prop {Function} dragStopCallback - A callback function for when the user\n * stops dragging\n * @prop {Function} dragLeaveCallback - A callback function for when the user\n * is dragging and the mouse/touch leaves the draggable component\n * @prop {Object} initialPosition - An object with initial x and y values for\n * the content\n * @prop {String} lock - An axis to lock element to when dragging, either\n * 'x' or 'y'\n * @prop {Boolean} preventDefaultEvents - Whether to prevent default\n * mouse/touch events\n * @prop {String} touchScrollLock - If set to true, prevents the content from\n * being dragged if the user is scrolling in the opposite direction on a touch\n * device\n */\nDraggable.propTypes = {\n  additionalClass: React.PropTypes.string,\n  bounds: React.PropTypes.shape({\n    x1: React.PropTypes.number.isRequired,\n    y1: React.PropTypes.number.isRequired,\n    x2: React.PropTypes.number.isRequired,\n    y2: React.PropTypes.number.isRequired,\n  }),\n  children: React.PropTypes.oneOfType([\n    React.PropTypes.array,\n    React.PropTypes.object,\n  ]).isRequired,\n  cssPosition: React.PropTypes.string,\n  dragCallback: React.PropTypes.func,\n  dragLeaveCallback: React.PropTypes.func,\n  dragStartCallback: React.PropTypes.func,\n  dragStopCallback: React.PropTypes.func,\n  initialPosition: React.PropTypes.object,\n  lock: React.PropTypes.string,\n  preventDefaultEvents: React.PropTypes.bool,\n  touchScrollLock: React.PropTypes.bool,\n};\n\n\nexport default Draggable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./assets/js/src/components/Draggable.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}